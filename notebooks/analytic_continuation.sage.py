
# This file was *autogenerated* from the file /Users/csw/thesis/notebooks/analytic_continuation.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7)
from abelfunctions import *
import numpy as np

R = QQ['x,y']; (x, y,) = R._first_ngens(2); R
f2 = y**_sage_const_3  + _sage_const_2 *x**_sage_const_3 *y - x**_sage_const_7 
X2 = RiemannSurface(f2)

gammax = (
    abelfunctions.complex_path_factory.ComplexArc(_sage_const_2 , _sage_const_0 , _sage_const_0 , np.pi) +
    abelfunctions.complex_path_factory.ComplexArc(_sage_const_2 , _sage_const_0 , np.pi, np.pi)
)


f2_x2 = f2(x=_sage_const_2 ).univariate_polynomial()
y0 = [np.complex(root) for (root,multiplicity) in f2_x2.roots(CC)]
gamma = X2.path_factory.RiemannSurfacePath_from_complex_path(gammax, x0=_sage_const_2 , y0=y0)

gamma[_sage_const_2 ].plot_y(color='red')

